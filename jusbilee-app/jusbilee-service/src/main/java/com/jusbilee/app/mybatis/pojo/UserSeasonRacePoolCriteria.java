package com.jusbilee.app.mybatis.pojo;

import java.util.ArrayList;
import java.util.List;

public class UserSeasonRacePoolCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public UserSeasonRacePoolCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdIsNull() {
            addCriterion("opponent_id is null");
            return (Criteria) this;
        }

        public Criteria andOpponentIdIsNotNull() {
            addCriterion("opponent_id is not null");
            return (Criteria) this;
        }

        public Criteria andOpponentIdEqualTo(Long value) {
            addCriterion("opponent_id =", value, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdNotEqualTo(Long value) {
            addCriterion("opponent_id <>", value, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdGreaterThan(Long value) {
            addCriterion("opponent_id >", value, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("opponent_id >=", value, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdLessThan(Long value) {
            addCriterion("opponent_id <", value, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdLessThanOrEqualTo(Long value) {
            addCriterion("opponent_id <=", value, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdIn(List<Long> values) {
            addCriterion("opponent_id in", values, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdNotIn(List<Long> values) {
            addCriterion("opponent_id not in", values, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdBetween(Long value1, Long value2) {
            addCriterion("opponent_id between", value1, value2, "opponentId");
            return (Criteria) this;
        }

        public Criteria andOpponentIdNotBetween(Long value1, Long value2) {
            addCriterion("opponent_id not between", value1, value2, "opponentId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdIsNull() {
            addCriterion("sub_level_id is null");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdIsNotNull() {
            addCriterion("sub_level_id is not null");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdEqualTo(Integer value) {
            addCriterion("sub_level_id =", value, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdNotEqualTo(Integer value) {
            addCriterion("sub_level_id <>", value, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdGreaterThan(Integer value) {
            addCriterion("sub_level_id >", value, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sub_level_id >=", value, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdLessThan(Integer value) {
            addCriterion("sub_level_id <", value, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdLessThanOrEqualTo(Integer value) {
            addCriterion("sub_level_id <=", value, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdIn(List<Integer> values) {
            addCriterion("sub_level_id in", values, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdNotIn(List<Integer> values) {
            addCriterion("sub_level_id not in", values, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdBetween(Integer value1, Integer value2) {
            addCriterion("sub_level_id between", value1, value2, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSubLevelIdNotBetween(Integer value1, Integer value2) {
            addCriterion("sub_level_id not between", value1, value2, "subLevelId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdIsNull() {
            addCriterion("season_song_id is null");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdIsNotNull() {
            addCriterion("season_song_id is not null");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdEqualTo(Integer value) {
            addCriterion("season_song_id =", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdNotEqualTo(Integer value) {
            addCriterion("season_song_id <>", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdGreaterThan(Integer value) {
            addCriterion("season_song_id >", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("season_song_id >=", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdLessThan(Integer value) {
            addCriterion("season_song_id <", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdLessThanOrEqualTo(Integer value) {
            addCriterion("season_song_id <=", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdIn(List<Integer> values) {
            addCriterion("season_song_id in", values, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdNotIn(List<Integer> values) {
            addCriterion("season_song_id not in", values, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdBetween(Integer value1, Integer value2) {
            addCriterion("season_song_id between", value1, value2, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdNotBetween(Integer value1, Integer value2) {
            addCriterion("season_song_id not between", value1, value2, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andIsMatchIsNull() {
            addCriterion("is_match is null");
            return (Criteria) this;
        }

        public Criteria andIsMatchIsNotNull() {
            addCriterion("is_match is not null");
            return (Criteria) this;
        }

        public Criteria andIsMatchEqualTo(Byte value) {
            addCriterion("is_match =", value, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchNotEqualTo(Byte value) {
            addCriterion("is_match <>", value, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchGreaterThan(Byte value) {
            addCriterion("is_match >", value, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_match >=", value, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchLessThan(Byte value) {
            addCriterion("is_match <", value, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchLessThanOrEqualTo(Byte value) {
            addCriterion("is_match <=", value, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchIn(List<Byte> values) {
            addCriterion("is_match in", values, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchNotIn(List<Byte> values) {
            addCriterion("is_match not in", values, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchBetween(Byte value1, Byte value2) {
            addCriterion("is_match between", value1, value2, "isMatch");
            return (Criteria) this;
        }

        public Criteria andIsMatchNotBetween(Byte value1, Byte value2) {
            addCriterion("is_match not between", value1, value2, "isMatch");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 25 00:34:55 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_season_race_pool
     *
     * @mbg.generated Sun Sep 25 00:34:55 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}