package com.jusbilee.app.mybatis.dao;

import com.jusbilee.app.mybatis.pojo.AdminUser;
import com.jusbilee.app.mybatis.pojo.AdminUserCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface AdminUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @SelectProvider(type = AdminUserSqlProvider.class, method = "countByExample")
    long countByExample(AdminUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @DeleteProvider(type = AdminUserSqlProvider.class, method = "deleteByExample")
    int deleteByExample(AdminUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @Delete({
            "delete from t_admin_user",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @Insert({
            "insert into t_admin_user (username, nickname, ",
            "password, mobile, ",
            "phone, email, address, ",
            "qq, is_locked, is_admin, ",
            "is_deleted, create_time, ",
            "update_time)",
            "values (#{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, ",
            "#{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, ",
            "#{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
            "#{qq,jdbcType=VARCHAR}, #{isLocked,jdbcType=TINYINT}, #{isAdmin,jdbcType=TINYINT}, ",
            "#{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, ",
            "#{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
    int insert(AdminUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @InsertProvider(type = AdminUserSqlProvider.class, method = "insertSelective")
    @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
    int insertSelective(AdminUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @SelectProvider(type = AdminUserSqlProvider.class, method = "selectByExample")
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "username", property = "username", jdbcType = JdbcType.VARCHAR),
            @Result(column = "nickname", property = "nickname", jdbcType = JdbcType.VARCHAR),
            @Result(column = "password", property = "password", jdbcType = JdbcType.VARCHAR),
            @Result(column = "mobile", property = "mobile", jdbcType = JdbcType.VARCHAR),
            @Result(column = "phone", property = "phone", jdbcType = JdbcType.VARCHAR),
            @Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address", property = "address", jdbcType = JdbcType.VARCHAR),
            @Result(column = "qq", property = "qq", jdbcType = JdbcType.VARCHAR),
            @Result(column = "is_locked", property = "isLocked", jdbcType = JdbcType.TINYINT),
            @Result(column = "is_admin", property = "isAdmin", jdbcType = JdbcType.TINYINT),
            @Result(column = "is_deleted", property = "isDeleted", jdbcType = JdbcType.TINYINT),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "update_time", property = "updateTime", jdbcType = JdbcType.TIMESTAMP)
    })
    List<AdminUser> selectByExample(AdminUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @Select({
            "select",
            "id, username, nickname, password, mobile, phone, email, address, qq, is_locked, ",
            "is_admin, is_deleted, create_time, update_time",
            "from t_admin_user",
            "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "username", property = "username", jdbcType = JdbcType.VARCHAR),
            @Result(column = "nickname", property = "nickname", jdbcType = JdbcType.VARCHAR),
            @Result(column = "password", property = "password", jdbcType = JdbcType.VARCHAR),
            @Result(column = "mobile", property = "mobile", jdbcType = JdbcType.VARCHAR),
            @Result(column = "phone", property = "phone", jdbcType = JdbcType.VARCHAR),
            @Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address", property = "address", jdbcType = JdbcType.VARCHAR),
            @Result(column = "qq", property = "qq", jdbcType = JdbcType.VARCHAR),
            @Result(column = "is_locked", property = "isLocked", jdbcType = JdbcType.TINYINT),
            @Result(column = "is_admin", property = "isAdmin", jdbcType = JdbcType.TINYINT),
            @Result(column = "is_deleted", property = "isDeleted", jdbcType = JdbcType.TINYINT),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "update_time", property = "updateTime", jdbcType = JdbcType.TIMESTAMP)
    })
    AdminUser selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @UpdateProvider(type = AdminUserSqlProvider.class, method = "updateByExampleSelective")
    int updateByExampleSelective(@Param("record") AdminUser record, @Param("example") AdminUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @UpdateProvider(type = AdminUserSqlProvider.class, method = "updateByExample")
    int updateByExample(@Param("record") AdminUser record, @Param("example") AdminUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @UpdateProvider(type = AdminUserSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AdminUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin_user
     *
     * @mbg.generated Sat Sep 10 23:20:28 CST 2016
     */
    @Update({
            "update t_admin_user",
            "set username = #{username,jdbcType=VARCHAR},",
            "nickname = #{nickname,jdbcType=VARCHAR},",
            "password = #{password,jdbcType=VARCHAR},",
            "mobile = #{mobile,jdbcType=VARCHAR},",
            "phone = #{phone,jdbcType=VARCHAR},",
            "email = #{email,jdbcType=VARCHAR},",
            "address = #{address,jdbcType=VARCHAR},",
            "qq = #{qq,jdbcType=VARCHAR},",
            "is_locked = #{isLocked,jdbcType=TINYINT},",
            "is_admin = #{isAdmin,jdbcType=TINYINT},",
            "is_deleted = #{isDeleted,jdbcType=TINYINT},",
            "create_time = #{createTime,jdbcType=TIMESTAMP},",
            "update_time = #{updateTime,jdbcType=TIMESTAMP}",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(AdminUser record);
}