package com.jusbilee.app.mybatis.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserSeasonRaceLogCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public UserSeasonRaceLogCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSeasonIdIsNull() {
            addCriterion("season_id is null");
            return (Criteria) this;
        }

        public Criteria andSeasonIdIsNotNull() {
            addCriterion("season_id is not null");
            return (Criteria) this;
        }

        public Criteria andSeasonIdEqualTo(Integer value) {
            addCriterion("season_id =", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdNotEqualTo(Integer value) {
            addCriterion("season_id <>", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdGreaterThan(Integer value) {
            addCriterion("season_id >", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("season_id >=", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdLessThan(Integer value) {
            addCriterion("season_id <", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdLessThanOrEqualTo(Integer value) {
            addCriterion("season_id <=", value, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdIn(List<Integer> values) {
            addCriterion("season_id in", values, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdNotIn(List<Integer> values) {
            addCriterion("season_id not in", values, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdBetween(Integer value1, Integer value2) {
            addCriterion("season_id between", value1, value2, "seasonId");
            return (Criteria) this;
        }

        public Criteria andSeasonIdNotBetween(Integer value1, Integer value2) {
            addCriterion("season_id not between", value1, value2, "seasonId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdIsNull() {
            addCriterion("winner_user_id is null");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdIsNotNull() {
            addCriterion("winner_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdEqualTo(Long value) {
            addCriterion("winner_user_id =", value, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdNotEqualTo(Long value) {
            addCriterion("winner_user_id <>", value, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdGreaterThan(Long value) {
            addCriterion("winner_user_id >", value, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("winner_user_id >=", value, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdLessThan(Long value) {
            addCriterion("winner_user_id <", value, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdLessThanOrEqualTo(Long value) {
            addCriterion("winner_user_id <=", value, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdIn(List<Long> values) {
            addCriterion("winner_user_id in", values, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdNotIn(List<Long> values) {
            addCriterion("winner_user_id not in", values, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdBetween(Long value1, Long value2) {
            addCriterion("winner_user_id between", value1, value2, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerUserIdNotBetween(Long value1, Long value2) {
            addCriterion("winner_user_id not between", value1, value2, "winnerUserId");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreIsNull() {
            addCriterion("winner_score is null");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreIsNotNull() {
            addCriterion("winner_score is not null");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreEqualTo(Integer value) {
            addCriterion("winner_score =", value, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreNotEqualTo(Integer value) {
            addCriterion("winner_score <>", value, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreGreaterThan(Integer value) {
            addCriterion("winner_score >", value, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("winner_score >=", value, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreLessThan(Integer value) {
            addCriterion("winner_score <", value, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreLessThanOrEqualTo(Integer value) {
            addCriterion("winner_score <=", value, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreIn(List<Integer> values) {
            addCriterion("winner_score in", values, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreNotIn(List<Integer> values) {
            addCriterion("winner_score not in", values, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreBetween(Integer value1, Integer value2) {
            addCriterion("winner_score between", value1, value2, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andWinnerScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("winner_score not between", value1, value2, "winnerScore");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdIsNull() {
            addCriterion("loser_user_id is null");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdIsNotNull() {
            addCriterion("loser_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdEqualTo(Long value) {
            addCriterion("loser_user_id =", value, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdNotEqualTo(Long value) {
            addCriterion("loser_user_id <>", value, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdGreaterThan(Long value) {
            addCriterion("loser_user_id >", value, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("loser_user_id >=", value, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdLessThan(Long value) {
            addCriterion("loser_user_id <", value, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdLessThanOrEqualTo(Long value) {
            addCriterion("loser_user_id <=", value, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdIn(List<Long> values) {
            addCriterion("loser_user_id in", values, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdNotIn(List<Long> values) {
            addCriterion("loser_user_id not in", values, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdBetween(Long value1, Long value2) {
            addCriterion("loser_user_id between", value1, value2, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserUserIdNotBetween(Long value1, Long value2) {
            addCriterion("loser_user_id not between", value1, value2, "loserUserId");
            return (Criteria) this;
        }

        public Criteria andLoserScoreIsNull() {
            addCriterion("loser_score is null");
            return (Criteria) this;
        }

        public Criteria andLoserScoreIsNotNull() {
            addCriterion("loser_score is not null");
            return (Criteria) this;
        }

        public Criteria andLoserScoreEqualTo(Integer value) {
            addCriterion("loser_score =", value, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreNotEqualTo(Integer value) {
            addCriterion("loser_score <>", value, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreGreaterThan(Integer value) {
            addCriterion("loser_score >", value, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("loser_score >=", value, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreLessThan(Integer value) {
            addCriterion("loser_score <", value, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreLessThanOrEqualTo(Integer value) {
            addCriterion("loser_score <=", value, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreIn(List<Integer> values) {
            addCriterion("loser_score in", values, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreNotIn(List<Integer> values) {
            addCriterion("loser_score not in", values, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreBetween(Integer value1, Integer value2) {
            addCriterion("loser_score between", value1, value2, "loserScore");
            return (Criteria) this;
        }

        public Criteria andLoserScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("loser_score not between", value1, value2, "loserScore");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdIsNull() {
            addCriterion("season_song_id is null");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdIsNotNull() {
            addCriterion("season_song_id is not null");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdEqualTo(Integer value) {
            addCriterion("season_song_id =", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdNotEqualTo(Integer value) {
            addCriterion("season_song_id <>", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdGreaterThan(Integer value) {
            addCriterion("season_song_id >", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("season_song_id >=", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdLessThan(Integer value) {
            addCriterion("season_song_id <", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdLessThanOrEqualTo(Integer value) {
            addCriterion("season_song_id <=", value, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdIn(List<Integer> values) {
            addCriterion("season_song_id in", values, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdNotIn(List<Integer> values) {
            addCriterion("season_song_id not in", values, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdBetween(Integer value1, Integer value2) {
            addCriterion("season_song_id between", value1, value2, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSeasonSongIdNotBetween(Integer value1, Integer value2) {
            addCriterion("season_song_id not between", value1, value2, "seasonSongId");
            return (Criteria) this;
        }

        public Criteria andSongIdIsNull() {
            addCriterion("song_id is null");
            return (Criteria) this;
        }

        public Criteria andSongIdIsNotNull() {
            addCriterion("song_id is not null");
            return (Criteria) this;
        }

        public Criteria andSongIdEqualTo(Integer value) {
            addCriterion("song_id =", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdNotEqualTo(Integer value) {
            addCriterion("song_id <>", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdGreaterThan(Integer value) {
            addCriterion("song_id >", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("song_id >=", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdLessThan(Integer value) {
            addCriterion("song_id <", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdLessThanOrEqualTo(Integer value) {
            addCriterion("song_id <=", value, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdIn(List<Integer> values) {
            addCriterion("song_id in", values, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdNotIn(List<Integer> values) {
            addCriterion("song_id not in", values, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdBetween(Integer value1, Integer value2) {
            addCriterion("song_id between", value1, value2, "songId");
            return (Criteria) this;
        }

        public Criteria andSongIdNotBetween(Integer value1, Integer value2) {
            addCriterion("song_id not between", value1, value2, "songId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdIsNull() {
            addCriterion("song_level_id is null");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdIsNotNull() {
            addCriterion("song_level_id is not null");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdEqualTo(Integer value) {
            addCriterion("song_level_id =", value, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdNotEqualTo(Integer value) {
            addCriterion("song_level_id <>", value, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdGreaterThan(Integer value) {
            addCriterion("song_level_id >", value, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("song_level_id >=", value, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdLessThan(Integer value) {
            addCriterion("song_level_id <", value, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdLessThanOrEqualTo(Integer value) {
            addCriterion("song_level_id <=", value, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdIn(List<Integer> values) {
            addCriterion("song_level_id in", values, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdNotIn(List<Integer> values) {
            addCriterion("song_level_id not in", values, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdBetween(Integer value1, Integer value2) {
            addCriterion("song_level_id between", value1, value2, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongLevelIdNotBetween(Integer value1, Integer value2) {
            addCriterion("song_level_id not between", value1, value2, "songLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdIsNull() {
            addCriterion("song_sub_level_id is null");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdIsNotNull() {
            addCriterion("song_sub_level_id is not null");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdEqualTo(Integer value) {
            addCriterion("song_sub_level_id =", value, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdNotEqualTo(Integer value) {
            addCriterion("song_sub_level_id <>", value, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdGreaterThan(Integer value) {
            addCriterion("song_sub_level_id >", value, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("song_sub_level_id >=", value, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdLessThan(Integer value) {
            addCriterion("song_sub_level_id <", value, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdLessThanOrEqualTo(Integer value) {
            addCriterion("song_sub_level_id <=", value, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdIn(List<Integer> values) {
            addCriterion("song_sub_level_id in", values, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdNotIn(List<Integer> values) {
            addCriterion("song_sub_level_id not in", values, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdBetween(Integer value1, Integer value2) {
            addCriterion("song_sub_level_id between", value1, value2, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andSongSubLevelIdNotBetween(Integer value1, Integer value2) {
            addCriterion("song_sub_level_id not between", value1, value2, "songSubLevelId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated do_not_delete_during_merge Wed Sep 14 07:56:40 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_season_race_log
     *
     * @mbg.generated Wed Sep 14 07:56:40 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}